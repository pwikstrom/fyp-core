[gemini]
key = "" # Your Gemini API Key goes here
model = "gemini-1.5-flash"
timeout = 30
temperature = 0.1
top_p = 0.95
top_k = 64
prompt = "prompts/gemini_prompt_framing.txt"
max_output_tokens = 16384
doublecheck_these_cols = ["video_story", "text_visible_in_video", "list_of_objects_in_video"]

[openai]
key = "" # Your OPenAI API Key goes here
model = "whisper-1"

[paths]
main = "" # Main path for your metadata and analysis results (temp and backup dirs end up here as well)
ddp_path = "" # Path to TikTok DDP files - leave blank if working with Zeeschuimer
zeeschuimer_raw = "" # Path to Zeeschuimer files - leave blank if working with TikTOk DDPs
zeeschuimer_refined = "" 
firefox_downloads = "" # Path to your Firefox Downloads folder

[fn]
baseline_results_fn = "baseline.csv"
ddp_results_fn = "ddp_results.csv"
pyk_metadata_fn = "pyk_metadata.pkl"
pyk_failed_items_fn = "pyk_failed_items.json"
gemini_video_analysis_fn = "gemini_video_analysis.pkl"
audio_transcriptions_fn = "audio_transcriptions.json"
all_metadata_wo_analysis_fn = "all_metadata_wo_analysis.csv"
all_static_metadata_fn = "all_static_metadata.csv"
website_metadata_fn = "website_metadata.csv"

[misc]
label = "no_label"
analyze_as_soon_as_videos_are_downloaded = true

[media_storage]
storage_type = "local" # 'local' or 'GCP'
GCP_bucket = "" # The name of your GCP bucket for storage of video audio files
local_storage_dir= "" # the path to your local storage if you prefer that to GCP
video_prefix = "videos" # sub prefix/folder for your videos
audio_prefix = "extracted_audio" # prefix for audio extracted from the video files
video_cover_prefix = "video_covers"
